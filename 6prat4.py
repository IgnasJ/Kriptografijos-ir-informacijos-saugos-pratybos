#  -*- coding: utf-8 -*-
def iter(M,k,f):
    r=M[1]
    l=M[0]^eval(f)
    return [r,l]

f='(r&k)^((k%16)|r)'
M=[[79, 95], [72, 86], [67, 78], [94, 93], [69, 91], [72, 79], [71, 69], [70, 75], [73, 68], [85, 87], [75, 74], [86, 85], [65, 85], [68, 77], [80, 70], [78, 70], [90, 66], [77, 85], [94, 90], [89, 75], [70, 70], [93, 73], [64, 74], [92, 95], [77, 68], [72, 82], [75, 85], [87, 83], [87, 82], [85, 73], [72, 66], [83, 87], [91, 98], [78, 105], [88, 102], [74, 123], [95, 96], [87, 101], [65, 101], [74, 121], [82, 96], [70, 97], [72, 104], [80, 111], [87, 109], [92, 107], [85, 119], [82, 113], [73, 127], [75, 109], [89, 123], [68, 120], [73, 99], [66, 105], [91, 96], [92, 126], [89, 107], [74, 107], [72, 104], [78, 111], [87, 99], [64, 108], [79, 102], [74, 103], [70, 94]]



#raktas =[92, 125, 105]
#naudojam atvirkscia
#CFB  ir CRT rakto nekeiciam vietom 
key=[92, 125, 105]



#CRT skaiciuoja
for i in range(0, len(M)):
	k = key[0]
	r = i
	s = eval(f)
	naujas = [s,s]
	iteraciju_rez = iter(iter(iter(naujas,key[0],f),key[1],f),key[2],f)
	
	ats = [iteraciju_rez[1]^M[i][0], iteraciju_rez[0]^M[i][1]]
	print(chr(ats[0]), end="")
	print(chr(ats[1]), end="")
	