#  -*- coding: utf-8 -*-
def iter(M,k,f):
    r=M[1]
    l=M[0]^eval(f)
    return [r,l]

f='(r&k)^((k%16)|r)'
M=[[65, 226], [181, 53], [83, 224], [173, 46], [95, 248], [165, 53], [67, 241], [161, 57], [92, 226], [181, 36], [81, 237], [170, 51], [94, 250], [187, 45], [80, 255], [162, 33], [64, 241], [163, 53], [80, 231], [180, 50], [79, 244], [165, 45], [93, 237], [169, 62], [91, 252], [173, 48], [65, 239], [166, 41], [94, 236], [185, 60], [73, 236], [187, 33], [81, 255], [184, 36], [81, 250], [187, 61], [92, 232], [177, 44], [83, 225], [177, 48], [69, 253], [176, 53], [72, 252], [177, 60], [79, 255], [175, 55], [93, 251], [171, 41], [66, 238], [171, 67]]


itervect = [186, 35]


#raktas =[92, 125, 105]
#CFB  ir CRT rakto nekeiciam vietom 
k=[92, 125, 105]

#CFB skaiciuoja
for i in range(0, len(M)):

	iteraciju_rez = iter(iter(iter(itervect,k[0],f),k[1],f),k[2],f)
	ats = [iteraciju_rez[1]^M[i][0], iteraciju_rez[0]^M[i][1]]
	itervect = M[i]
	print(chr(ats[0]), end="")
	print(chr(ats[1]), end="")
	